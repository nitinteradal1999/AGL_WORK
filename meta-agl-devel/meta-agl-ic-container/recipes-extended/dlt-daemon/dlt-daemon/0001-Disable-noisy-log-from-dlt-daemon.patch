From 2e6c7359a1b2b0946f8f6583a1bcdbb78d1feef9 Mon Sep 17 00:00:00 2001
From: Naoto Yamaguchi <naoto.yamaguchi@aisin.co.jp>
Date: Thu, 18 May 2023 01:02:46 +0900
Subject: [PATCH] Disable noisy log from dlt-daemon

The dlt-daemon out some own log. But it's a verbose log.
On the other hand, these verbose log difficult to mask by dlt-viewer.
This patch disable these verbose log.

Signed-off-by: Naoto Yamaguchi <naoto.yamaguchi@aisin.co.jp>
---
 src/daemon/dlt-daemon.c               |  7 -------
 src/daemon/dlt_daemon_common.c        | 20 --------------------
 src/daemon/dlt_daemon_event_handler.c |  4 ----
 3 files changed, 31 deletions(-)

diff --git a/src/daemon/dlt-daemon.c b/src/daemon/dlt-daemon.c
index 74f4049..d659011 100644
--- a/src/daemon/dlt-daemon.c
+++ b/src/daemon/dlt-daemon.c
@@ -2333,9 +2333,6 @@ int dlt_daemon_process_control_connect(
         return -1;
     }
 
-    if (verbose)
-        dlt_vlog(LOG_INFO, "New connection to control client established\n");
-
     return 0;
 }
 
@@ -2379,9 +2376,6 @@ int dlt_daemon_process_app_connect(
         return -1;
     }
 
-    if (verbose)
-        dlt_vlog(LOG_INFO, "New connection to application established\n");
-
     return 0;
 }
 #endif
@@ -3489,7 +3483,6 @@ int create_timer_fd(DltDaemonLocal *daemon_local,
 
     if ((period_sec <= 0) || (starts_in <= 0)) {
         /* timer not activated via the service file */
-        dlt_vlog(LOG_INFO, "<%s> not set: period=0\n", timer_name);
         local_fd = DLT_FD_INIT;
     }
     else {
diff --git a/src/daemon/dlt_daemon_common.c b/src/daemon/dlt_daemon_common.c
index 6ba5935..7940b96 100644
--- a/src/daemon/dlt_daemon_common.c
+++ b/src/daemon/dlt_daemon_common.c
@@ -896,13 +896,6 @@ DltDaemonContext *dlt_daemon_context_add(DltDaemon *daemon,
 
         if (trace_status > daemon->default_trace_status)
             trace_status = daemon->default_trace_status;
-
-        dlt_vlog(LOG_NOTICE,
-                 "Adapting ll_ts for context: %.4s:%.4s with %i %i\n",
-                 apid,
-                 ctid,
-                 log_level,
-                 trace_status);
     }
 
     /* Store log level and trace status,
@@ -1370,14 +1363,6 @@ int dlt_daemon_user_send_log_level(DltDaemon *daemon, DltDaemonContext *context,
 
     usercontext.log_level_pos = context->log_level_pos;
 
-    dlt_vlog(LOG_NOTICE, "Send log-level to context: %.4s:%.4s [%i -> %i] [%i -> %i]\n",
-             context->apid,
-             context->ctid,
-             context->log_level,
-             usercontext.log_level,
-             context->trace_status,
-             usercontext.trace_status);
-
     /* log to FIFO */
     errno = 0;
     ret = dlt_user_log_out2(context->user_handle,
@@ -1617,23 +1602,18 @@ void dlt_daemon_change_state(DltDaemon *daemon, DltDaemonState newState)
 {
     switch (newState) {
     case DLT_DAEMON_STATE_INIT:
-        dlt_log(LOG_INFO, "Switched to init state.\n");
         daemon->state = DLT_DAEMON_STATE_INIT;
         break;
     case DLT_DAEMON_STATE_BUFFER:
-        dlt_log(LOG_INFO, "Switched to buffer state for socket connections.\n");
         daemon->state = DLT_DAEMON_STATE_BUFFER;
         break;
     case DLT_DAEMON_STATE_BUFFER_FULL:
-        dlt_log(LOG_INFO, "Switched to buffer full state.\n");
         daemon->state = DLT_DAEMON_STATE_BUFFER_FULL;
         break;
     case DLT_DAEMON_STATE_SEND_BUFFER:
-        dlt_log(LOG_INFO, "Switched to send buffer state for socket connections.\n");
         daemon->state = DLT_DAEMON_STATE_SEND_BUFFER;
         break;
     case DLT_DAEMON_STATE_SEND_DIRECT:
-        dlt_log(LOG_INFO, "Switched to send direct state.\n");
         daemon->state = DLT_DAEMON_STATE_SEND_DIRECT;
         break;
     }
diff --git a/src/daemon/dlt_daemon_event_handler.c b/src/daemon/dlt_daemon_event_handler.c
index db5767a..192f631 100644
--- a/src/daemon/dlt_daemon_event_handler.c
+++ b/src/daemon/dlt_daemon_event_handler.c
@@ -402,8 +402,6 @@ int dlt_connection_check_activate(DltEventHandler *evhdl,
     case ACTIVE:
 
         if (activation_type == DEACTIVATE) {
-            dlt_vlog(LOG_INFO, "Deactivate connection type: %u\n", con->type);
-
             dlt_event_handler_disable_fd(evhdl, con->receiver->fd);
 
             if (con->type == DLT_CONNECTION_CLIENT_CONNECT)
@@ -416,8 +414,6 @@ int dlt_connection_check_activate(DltEventHandler *evhdl,
     case INACTIVE:
 
         if (activation_type == ACTIVATE) {
-            dlt_vlog(LOG_INFO, "Activate connection type: %u\n", con->type);
-
             dlt_event_handler_enable_fd(evhdl,
                                         con->receiver->fd,
                                         con->ev_mask);
-- 
2.25.1

